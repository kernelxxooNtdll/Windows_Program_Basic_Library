#pragma once

#include <ntddk.h>


//////////////////////////////////////////////////////////////////////////
// 名称: InitializeListManager
// 说明: 初始化链表
// 返回: 初始化结构,返回TRUE表示初始化完成
// 备注: 
// email: cppcoffee@gmail.com
//////////////////////////////////////////////////////////////////////////
VOID InitializeListManager();



//////////////////////////////////////////////////////////////////////////
// 名称: UninitializeListManager
// 说明: 删除所有链表对象
// 备注: 
// email: cppcoffee@gmail.com
//////////////////////////////////////////////////////////////////////////
VOID UninitializeListManager();



//////////////////////////////////////////////////////////////////////////
// 名称: MallocAddressItem
// 说明: 分配传输地址结构体内存
// 返回: 分配的传输地址结构体内存地址
// 备注: 如果分配失败,返回值为NULL
// email: cppcoffee@gmail.com
//////////////////////////////////////////////////////////////////////////
PADDRESS_ITEM MallocAddressItem();



//////////////////////////////////////////////////////////////////////////
// 名称: MallocConnectionItem
// 说明: 分配连接上下文结构体内存
// 返回: 分配的连接上下文结构体内存地址
// 备注: 如果分配失败,返回值为NULL
// email: cppcoffee@gmail.com
//////////////////////////////////////////////////////////////////////////
PCONNECTION_ITEM MallocConnectionItem();



//////////////////////////////////////////////////////////////////////////
// 名称: FreeAddressItem
// 说明: 释放传输地址相关结构体内存
// 入参: pAddressItem 地址结构体内存
// 备注: 还没插入到链表,但是要释放分配的内存的时候使用
// email: cppcoffee@gmail.com
//////////////////////////////////////////////////////////////////////////
VOID FreeAddressItem( IN PADDRESS_ITEM pAddressItem );



//////////////////////////////////////////////////////////////////////////
// 名称: FreeConnectionItem
// 说明: 释放连接上下文相关结构体内存
// 入参: pConnectionitem 连接上下文结构体内存
// 备注: 还没插入到链表,但是要释放分配的内存的时候使用
// email: cppcoffee@gmail.com
//////////////////////////////////////////////////////////////////////////
VOID FreeConnectionItem( IN PCONNECTION_ITEM pConnectionItem );



//////////////////////////////////////////////////////////////////////////
// 名称: InsertAddressItemToList
// 说明: 插入传输地址项到传输地址项的链表中
// 入参: pAddressItem 传输地址结构体指针
// 备注: 
// email: cppcoffee@gmail.com
//////////////////////////////////////////////////////////////////////////
VOID InsertAddressItemToList( IN PADDRESS_ITEM pAddressItem );



//////////////////////////////////////////////////////////////////////////
// 名称: InsertConnectionItemToList
// 说明: 插入到连接上下文链表中
// 入参: pConnectionItem 连接上下文结构体内存
// 备注: 
// email: cppcoffee@gmail.com
//////////////////////////////////////////////////////////////////////////
VOID InsertConnectionItemToList( IN PCONNECTION_ITEM pConnectionItem );



//////////////////////////////////////////////////////////////////////////
// 名称: DeleteConnectionItemFromList
// 说明: 从链表中删除连接上下文结构体内存
// 入参: pConnectionItem 要删除的连接上下文指针
// 返回: 操作的结果
// 备注: 元素只有在链表中的时候才其效果
// email: cppcoffee@gmail.com
//////////////////////////////////////////////////////////////////////////
BOOLEAN DeleteConnectionItemFromList( IN PCONNECTION_ITEM pConnectionItem );



//////////////////////////////////////////////////////////////////////////
// 名称: DeleteAddressItemFromList
// 说明: 从链表中删除传输地址结构体内存
// 入参: pAddressItem 要删除的传输地址结构体内存指针
// 返回: 操作的结果
// 备注: 元素只有在链表中的时候才其效果
// email: cppcoffee@gmail.com
//////////////////////////////////////////////////////////////////////////
BOOLEAN DeleteAddressItemFromList( IN PADDRESS_ITEM pAddressItem );



//////////////////////////////////////////////////////////////////////////
// 名称: FindAddressItemByFileObj
// 说明: 根据FileObject查找对应的传输地址结构体指针
// 入参: FileObject 传输地址文件对象指针
// 返回: 与FileObject对应的传输地址结构体指针
// 备注: 
// email: cppcoffee@gmail.com
//////////////////////////////////////////////////////////////////////////
PADDRESS_ITEM FindAddressItemByFileObj( IN PFILE_OBJECT FileObject );



//////////////////////////////////////////////////////////////////////////
// 名称: FindConnectItemByFileObj
// 说明: 根据FileObject查找对应的连接上下文结构体指针
// 入参: FileObject 连接上下文文件对象指针
// 返回: 与FileObject 对应的连接上下文结构体指针
// 备注: 
// email: cppcoffee@gmail.com
//////////////////////////////////////////////////////////////////////////
PCONNECTION_ITEM FindConnectItemByFileObj( IN PFILE_OBJECT FileObject );



//////////////////////////////////////////////////////////////////////////
// 名称: FindConnectItemByConnectContext
// 说明: 根据ConnectionContext(连接上下文指针)查找对应的连接上下文结构体指针
// 入参: ConnectionContext 连接上下文指针
// 返回: 与ConnectionContext 对应的连接上下文结构体指针
// 备注: 
// email: cppcoffee@gmail.com
//////////////////////////////////////////////////////////////////////////
PCONNECTION_ITEM FindConnectItemByConnectContext( IN CONNECTION_CONTEXT ConnectionContext );


